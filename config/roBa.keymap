#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&mkp_input_listener { input-processors = <&zip_temp_layer 4 250>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off MOUSE>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };

        // スクロール動作の追加

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    //--------------ここから追記---------------
    //--------USキーボードの記号を日本語OSで表示通りに入力するための処理-----------------------------
    //`~マーク

    jis_GRAVE: jis_GRAVE {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_GRAVE";
        #binding-cells = <0>;
        bindings = <&kp LS(LBKT)>, <&kp EQUAL>;

        //通常時でもレフトシフトするようにしてある。

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;  //shiftを押しっぱなしにするための記述
    };

    //@マーク

    jis_N2: jis_N2 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N2";
        #binding-cells = <0>;
        bindings = <&kp N2>, <&kp LBKT>;

        mods = <(MOD_LSFT|MOD_RSFT)>;

        //keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    //^マーク

    jis_N6: jis_N6 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N6";
        #binding-cells = <0>;
        bindings = <&kp N6>, <&kp EQUAL>;

        mods = <(MOD_LSFT|MOD_RSFT)>;

        //keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        //&マーク
    };

    jis_N7: jis_N7 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N7";
        #binding-cells = <0>;
        bindings = <&kp N7>, <&kp N6>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    //アスタリスクマーク

    jis_N8: jis_N8 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N8";
        #binding-cells = <0>;
        bindings = <&kp N8>, <&kp SQT>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    // (マーク

    jis_N9: jis_N9 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N9";
        #binding-cells = <0>;
        bindings = <&kp N9>, <&kp N8>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    // )マーク

    jis_N0: jis_N0 {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_N0";
        #binding-cells = <0>;
        bindings = <&kp N0>, <&kp N9>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    //アンダーバー

    jis_MINUS: jis_MINUS {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_MINUS";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp INT1>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    //イコールとプラス

    jis_EQUAL: jis_EQUAL {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_EQUAL";
        #binding-cells = <0>;
        bindings = <&kp LS(MINUS)>, <&kp SEMI>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    // [マーク

    jis_LBKT: jis_LBKT {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_LBKT";
        #binding-cells = <0>;
        bindings = <&kp RBKT>, <&kp RBKT>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    // ]マーク

    jis_RBKT: jis_RBKT {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_RBKT";
        #binding-cells = <0>;
        bindings = <&kp BSLH>, <&kp BSLH>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    // yenマーク

    jis_BSLH: jis_BSLH {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_BSLH";
        #binding-cells = <0>;
        bindings = <&kp INT3>, <&kp INT3>;

        //INT3ではないかも

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    //コロンセミコロン

    jis_SEMI: jis_SEMI {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_SEMI";
        #binding-cells = <0>;
        bindings = <&kp SEMI>, <&kp SQT>;

        mods = <(MOD_LSFT|MOD_RSFT)>;

        //keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    //クオーテーション

    jis_SQT: jis_SQT {
        compatible = "zmk,behavior-mod-morph";
        label = "jis_SQT";
        #binding-cells = <0>;
        bindings = <&kp LS(N7)>, <&kp N2>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    //--------------ここまで---------------

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R      &kp T                                            &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F      &kp G            &kp LS(LG(S))      &kp LANG1    &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V      &kp B            &kp MINUS          &kp LANG2    &kp N      &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 TAB  &lt 2 BACKSPACE  &lt 4 SPACE        &lt 7 ENTER  &lt 3 DEL                             &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        FUNCTION {
            bindings = <
&kp GRAVE       &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR                        &kp SQT    &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR
&none           &kp DLLR  &kp PRCNT  &kp CARET  &none     &none      &kp MINUS  &kp EQUAL  &kp DLLR  &kp PRCNT  &kp CARET  &kp BSLH
&kp LEFT_SHIFT  &kp EXCL  &kp AT     &kp HASH   &none     &none      &kp LBKT   &kp RBKT   &kp EXCL  &kp AT     &kp HASH   &kp PIPE
&none           &none     &none      &none      &none     &none      &none      &none                                      &kp GRAVE
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                              &none   &kp N7  &kp N8  &kp N9  &none
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp PLUS   &none   &kp N4  &kp N5  &kp N6  &none
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &kp MINUS  &kp N0  &kp N1  &kp N2  &kp N3  &none
&none                       &none            &none            &none            &none         &none                        &none      &none                           &none
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE          &kp HOME                &kp UP_ARROW    &kp END                  &kp PG_UP                    &kp PG_UP      &kp HOME        &kp UP_ARROW            &kp END                  &none
&kp TAB             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp PG_DN  &none      &none  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW          &kp RIGHT_ARROW          &none
&kp LS(LEFT_SHIFT)  &kp LG(LS(LEFT_ARROW))  &none           &kp LG(LS(RIGHT_ARROW))  &none      &none      &none  &none          &none           &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT_ARROW))  &none
&none               &none                   &none           &none                    &none      &none      &none  &none                                                                           &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&none  &none  &none  &none  &none                    &none     &none     &none     &none     &none
&none  &none  &none  &none  &none  &none      &none  &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &msc SCRL_UP
&none  &none  &none  &none  &none  &none      &none  &mkp MB5  &none     &none     &none     &msc SCRL_DOWN
&none  &none  &none  &none  &none  &none      &none  &none                                   &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_6 {
            bindings = <
&none         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none                          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none  &none      &none        &none         &none         &none         &none         &none
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none      &bootloader  &none         &none         &none         &none         &bt BT_CLR
&none         &none         &none         &none         &none  &none      &none        &none                                                   &bt BT_CLR_ALL
            >;
        };

        Num_FN {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &none      &none  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&kp F11       &kp F12       &kp F13       &none         &none         &none      &none  &none         &none         &none         &none         &none
&none         &none         &none         &none         &none         &none      &none  &none                                                   &none
            >;
        };
    };
};
